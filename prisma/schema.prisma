generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum UserType {
    ADMIN
    GUEST
}

model Organization {
    id         String   @id @default(uuid())
    name       String
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt

    users User[]

    @@map("organizations")
}

model User {
    id              String       @id @default(uuid())
    name            String
    email           String       @unique
    password_hash   String
    type            UserType
    created_at      DateTime     @default(now())
    updated_at      DateTime     @updatedAt
    organization    Organization @relation(fields: [organization_id], references: [id])
    organization_id String

    Account     Account[]
    Category    Category[]
    Transaction Transaction[]
    CreditCard  CreditCard[]

    @@map("users")
}

enum Institution {
    NUBANK
    XP
    ITAU
    BRADESCO
    SANTANDER
    BANCO_DO_BRASIL
    CAIXA
    INTER
    SICOOB
    SICREDI
    OTHER
}

model Account {
    id          String      @id @default(uuid())
    name        String
    institution Institution @default(OTHER)
    balance     Float
    expense     Float       @default(0)
    income      Float       @default(0)
    created_at  DateTime    @default(now())
    updated_at  DateTime    @updatedAt
    user_id     String

    user        User          @relation(fields: [user_id], references: [id])
    Transaction Transaction[]
    CreditCard  CreditCard[]

    @@map("accounts")
}

enum Color {
    RED
    PINK
    PURPLE
    DEEP_PURPLE
    INDIGO
    BLUE
    LIGHT_BLUE
    CYAN
    TEAL
    GREEN
    LIGHT_GREEN
    LIME
    YELLOW
    AMBER
    ORANGE
    DEEP_ORANGE
    BROWN
    GREY
    BLUE_GREY
    BLACK
}

model Category {
    id          String   @id @default(uuid())
    name        String
    description String?
    color       Color    @default(BLUE_GREY)
    created_at  DateTime @default(now())
    updated_at  DateTime @updatedAt
    user_id     String

    user        User          @relation(fields: [user_id], references: [id])
    Transaction Transaction[]

    @@map("categories")
}

enum TransactionType {
    INCOME
    EXPENSE
}

model Transaction {
    id          String          @id @default(uuid())
    title       String
    description String?
    amount      Float
    type        TransactionType
    date        DateTime
    created_at  DateTime        @default(now())
    updated_at  DateTime        @updatedAt
    account_id  String
    category_id String
    user_id     String

    account  Account  @relation(fields: [account_id], references: [id])
    category Category @relation(fields: [category_id], references: [id])
    user     User     @relation(fields: [user_id], references: [id])

    @@map("transactions")
}

enum Flag {
    VISA
    MASTERCARD
    ELO
    AMERICAN_EXPRESS
    HIPERCARD
    DINERS_CLUB
    DISCOVER
    JCB
    AURA
    OTHER
}

model CreditCard {
    id         String   @id @default(uuid())
    name       String
    limit      Float
    flag       Flag     @default(OTHER)
    closingDay Int
    dueDay     Int
    user_id    String
    account_id String
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt

    User    User    @relation(fields: [user_id], references: [id])
    Account Account @relation(fields: [account_id], references: [id])
}
